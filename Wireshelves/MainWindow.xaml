<hui:ChromeWindow
    x:Class="Wireshelves.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hui="https://github.com/lokihonoo/honooui.wpf"
    xmlns:local="clr-namespace:Wireshelves"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:Wireshelves.ViewModels"
    x:Name="Window"
    Title="Wireshelves"
    Background="{DynamicResource PrimaryBackgroundBrush}"
    DataContext="{x:Static vm:MainWindowViewModel.Instance}"
    FontSize="{DynamicResource PrimaryFontSize}"
    Foreground="{DynamicResource PrimaryForegroundBrush}"
    Left="{Binding WindowLeft, Source={x:Static vm:Settings.Instance}, Mode=TwoWay}"
    SizeToContent="WidthAndHeight"
    SystemButtons="Close"
    Top="{Binding WindowTop, Source={x:Static vm:Settings.Instance}, Mode=TwoWay}"
    mc:Ignorable="d">
    <hui:ChromeWindow.Resources>
        <local:ThemeStyleToCutomConverter
            x:Key="ThemeStyleToTitleBgConverter"
            DarkValue="/Resources/TitleBg_200x32_D.png"
            LightValue="/Resources/TitleBg_200x32_L.png" />
        <Style
            x:Key="HeaderLabelStyle"
            BasedOn="{StaticResource {x:Type Label}}"
            TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="9,0,0,0" />
            <Setter Property="Padding" Value="7,2" />
            <Setter Property="Foreground" Value="{DynamicResource ThirdlyForegroundBrush}" />
            <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}" />
        </Style>
        <!--  多项组右键菜单  -->
        <ContextMenu x:Key="AppGroupContextMenu">
            <MenuItem
                HorizontalContentAlignment="Left"
                Command="{Binding MoveToPreviousPageCommand, Source={x:Static vm:MainWindowViewModel.Instance}}"
                Header="{Binding Main.MoveToPreviousPage, Source={x:Static vm:LanguagePackage.Instance}}">
                <MenuItem.Icon>
                    <Path
                        Data="{StaticResource ArrowUpBoldHexagonGeometry}"
                        Fill="{DynamicResource PrimaryForegroundBrush}"
                        Style="{StaticResource PathIcon16Style}" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                HorizontalContentAlignment="Left"
                Command="{Binding MoveToNextPageCommand, Source={x:Static vm:MainWindowViewModel.Instance}}"
                Header="{Binding Main.MoveToNextPage, Source={x:Static vm:LanguagePackage.Instance}}">
                <MenuItem.Icon>
                    <Path
                        Data="{StaticResource ArrowDownBoldHexagonGeometry}"
                        Fill="{DynamicResource PrimaryForegroundBrush}"
                        Style="{StaticResource PathIcon16Style}" />
                </MenuItem.Icon>
            </MenuItem>
            <Separator />
            <MenuItem
                HorizontalContentAlignment="Left"
                Command="{Binding RemoveGroupCommand, Source={x:Static vm:MainWindowViewModel.Instance}}"
                Header="{Binding Main.RemoveGroup, Source={x:Static vm:LanguagePackage.Instance}}">
                <MenuItem.Icon>
                    <Path
                        Data="{StaticResource DeleteGeometry}"
                        Fill="{DynamicResource PrimaryForegroundBrush}"
                        Style="{StaticResource PathIcon16Style}" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </hui:ChromeWindow.Resources>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding WindowLoadedCommand}" PassEventArgsToCommand="True" />
        </b:EventTrigger>
        <b:EventTrigger EventName="Closing">
            <b:InvokeCommandAction Command="{Binding WindowClosingCommand}" PassEventArgsToCommand="True" />
        </b:EventTrigger>
        <b:EventTrigger EventName="Deactivated">
            <b:InvokeCommandAction Command="{Binding WindowDeactivatedCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
        </b:EventTrigger>
    </b:Interaction.Triggers>
    <hui:ChromeWindow.SystemBar>
        <StackPanel Orientation="Horizontal">
            <hui:MenuButton
                Width="45"
                DropIconVisibility="Collapsed"
                Style="{DynamicResource MenuButtonSystemBarStyle}"
                ToolTip="{Binding Main.AddPageTip, Source={x:Static vm:LanguagePackage.Instance}}"
                WindowChrome.IsHitTestVisibleInChrome="True">
                <hui:MenuButton.Header>
                    <Path Data="{StaticResource PlusGeometry}" Style="{StaticResource PathIcon12FillParentForegroundStyle}" />
                </hui:MenuButton.Header>
                <MenuItem
                    Command="{Binding AddPageCommand}"
                    CommandParameter="Previous"
                    Header="{Binding Main.AddPreviousPage, Source={x:Static vm:LanguagePackage.Instance}}">
                    <MenuItem.Icon>
                        <Path
                            Data="{StaticResource SquareHalfTopFillGeometry}"
                            Fill="{DynamicResource PrimaryForegroundBrush}"
                            Style="{StaticResource PathIcon14Style}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Command="{Binding AddPageCommand}"
                    CommandParameter="Next"
                    Header="{Binding Main.AddNextPage, Source={x:Static vm:LanguagePackage.Instance}}">
                    <MenuItem.Icon>
                        <Path
                            Data="{StaticResource SquareHalfBottomFillGeometry}"
                            Fill="{DynamicResource PrimaryForegroundBrush}"
                            Style="{StaticResource PathIcon14Style}" />
                    </MenuItem.Icon>
                </MenuItem>
            </hui:MenuButton>
            <ToggleButton
                hui:ToggleButtonAttached.CheckedBackground="{DynamicResource ContainerHardOpacityBackgroundBrush}"
                IsChecked="{Binding Pinned, Source={x:Static vm:Settings.Instance}, Mode=TwoWay}"
                Style="{DynamicResource ToggleButtonSystemBarStyle}"
                ToolTip="{Binding Main.PinTip, Source={x:Static vm:LanguagePackage.Instance}}"
                ToolTipService.Placement="Bottom"
                WindowChrome.IsHitTestVisibleInChrome="True">
                <hui:CheckStateControl
                    CheckedContent="{StaticResource PinFillGeometry}"
                    CheckedContentTemplate="{StaticResource PathIcon12FillParentForegroundGeometryDataTemplate}"
                    CheckedForeground="#FFF19102"
                    UncheckedContent="{StaticResource PinGeometry}"
                    UncheckedContentTemplate="{StaticResource PathIcon12FillParentForegroundGeometryDataTemplate}" />
            </ToggleButton>
        </StackPanel>
    </hui:ChromeWindow.SystemBar>
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!--  标题栏  -->
            <Grid
                Grid.Row="0"
                Height="32"
                Background="{DynamicResource ContainerHardOpacityBackgroundBrush}">
                <Image
                    Margin="50,0,10,0"
                    HorizontalAlignment="Left"
                    Source="{Binding ThemeStyle, Source={x:Static vm:Settings.Instance}, Converter={StaticResource ThemeStyleToTitleBgConverter}}"
                    Stretch="Uniform" />
                <Grid Margin="24,0,0,0">
                    <TextBlock
                        Margin="40,16,0,0"
                        VerticalAlignment="Top"
                        FontSize="12"
                        Foreground="{DynamicResource ThirdlyForegroundBrush}"
                        Text="Lightweight software launcher" />
                    <TextBlock
                        Margin="0,1,0,0"
                        VerticalAlignment="Top"
                        FontSize="16"
                        FontWeight="Bold"
                        Foreground="#FF3464DC"
                        Text="Wireshelves" />
                </Grid>
            </Grid>
            <!--  中心区域  -->
            <Grid Grid.Row="1" Background="{DynamicResource ContainerHardOpacityBackgroundBrush}">
                <!--  APP 列表  -->
                <hui:Carousel
                    d:Height="535"
                    d:ItemsSource="{d:SampleData ItemCount=3}"
                    d:Width="535"
                    AllowDrop="True"
                    Background="Transparent"
                    IsClickTurn="False"
                    IsTabStripFloated="True"
                    IsTimeTurn="False"
                    ItemsSource="{Binding AppItemPages}"
                    SelectedItem="{Binding CurrentAppItemPage, Mode=TwoWay}"
                    TabStripMinSize="42"
                    TabStripPlacement="Right">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Drop">
                            <b:InvokeCommandAction Command="{Binding AppItemAreaDropCommand, Source={x:Static vm:MainWindowViewModel.Instance}}" PassEventArgsToCommand="True" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                    <hui:Carousel.ContentTemplate>
                        <DataTemplate DataType="{x:Type vm:AppItemPage}">
                            <Grid>
                                <!--  空白页  -->
                                <Grid d:Visibility="Collapsed" Visibility="{Binding AppItemGroups.Count, Converter={x:Static hui:NumEqualParamToVisibilityVisibleConverter.Instance}, ConverterParameter=0}">
                                    <StackPanel
                                        Margin="0,5,65,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        d:Visibility="Visible">
                                        <Path
                                            Margin="0,0,0,10"
                                            HorizontalAlignment="Right"
                                            Data="{StaticResource ArrowUpGeometry}"
                                            Fill="{DynamicResource SecondaryForegroundBrush}"
                                            Style="{StaticResource PathIcon16Style}" />
                                        <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}" Text="{Binding Main.PinDescription, Source={x:Static vm:LanguagePackage.Instance}}" />
                                    </StackPanel>
                                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Button
                                            Padding="9,6"
                                            HorizontalAlignment="Center"
                                            Command="{Binding RemovePageCommand, Source={x:Static vm:MainWindowViewModel.Instance}}"
                                            Foreground="{DynamicResource SecondaryForegroundBrush}">
                                            <StackPanel Orientation="Horizontal">
                                                <Path
                                                    HorizontalAlignment="Right"
                                                    Data="{StaticResource DeleteGeometry}"
                                                    Fill="{DynamicResource SecondaryForegroundBrush}"
                                                    Style="{StaticResource PathIcon16Style}" />
                                                <TextBlock Margin="10,0,0,0" Text="{Binding Main.RemovePage, Source={x:Static vm:LanguagePackage.Instance}}" />
                                            </StackPanel>
                                        </Button>
                                        <TextBlock
                                            Margin="20"
                                            Foreground="{DynamicResource SecondaryForegroundBrush}"
                                            Text="{Binding Main.EmptyPageDescription, Source={x:Static vm:LanguagePackage.Instance}}" />
                                    </StackPanel>
                                </Grid>
                                <!--  APP  -->
                                <ItemsControl
                                    Margin="30"
                                    d:ItemsSource="{d:SampleData ItemCount=25}"
                                    ItemsSource="{Binding AppItemGroups}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel
                                                Width="{Binding ShelfCol, Source={x:Static vm:Settings.Instance}, Converter={x:Static hui:NumMulParamToDoubleConverter.Instance}, ConverterParameter=95}"
                                                Height="{Binding ShelfRow, Source={x:Static vm:Settings.Instance}, Converter={x:Static hui:NumMulParamToDoubleConverter.Instance}, ConverterParameter=95}"
                                                Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="{x:Type vm:AppItemGroup}">
                                            <hui:DraggableHaft
                                                Width="95"
                                                Height="95"
                                                Padding="0"
                                                HorizontalContentAlignment="Center"
                                                VerticalContentAlignment="Top"
                                                Background="Transparent"
                                                BorderThickness="0"
                                                Command="{Binding AppItemGroupCompoundCommand, Source={x:Static vm:MainWindowViewModel.Instance}}"
                                                CornerRadius="0"
                                                DragData="{Binding}"
                                                HoveringStartDelay="00:00:03"
                                                PassEventArgsToCommand="True">
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="MouseRightButtonUp">
                                                        <b:InvokeCommandAction Command="{Binding AppItemGroupMouseRightUpCommand, Source={x:Static vm:MainWindowViewModel.Instance}}" PassEventArgsToCommand="True" />
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                                <StackPanel>
                                                    <Grid
                                                        Width="32"
                                                        Height="32"
                                                        Margin="15,10,15,10">
                                                        <ContentControl Content="{Binding Icon}">
                                                            <d:ContentControl.Content>
                                                                <d:Path Data="{StaticResource FileBreakGeometry}" Style="{StaticResource PathIcon32Style}" />
                                                            </d:ContentControl.Content>
                                                        </ContentControl>
                                                    </Grid>
                                                    <TextBlock
                                                        Margin="4,0,4,0"
                                                        d:Text="ABC 12345 ZX666"
                                                        Text="{Binding Title}"
                                                        TextAlignment="Center"
                                                        TextWrapping="Wrap" />
                                                </StackPanel>
                                            </hui:DraggableHaft>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>

                        </DataTemplate>
                    </hui:Carousel.ContentTemplate>
                </hui:Carousel>
                <!--  组窗口  -->
                <Grid d:Visibility="Collapsed" Visibility="{Binding CurrentAppItemGroup, FallbackValue={x:Static Visibility.Visible}, TargetNullValue={x:Static Visibility.Collapsed}}">
                    <Button
                        AllowDrop="True"
                        Background="{DynamicResource SecondaryBackgroundBrush}"
                        Command="{Binding CloseGroupMenuCommand}"
                        CommandParameter="Close"
                        Opacity="0.85"
                        Style="{DynamicResource ButtonBlankStyle}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Drop">
                                <b:InvokeCommandAction Command="{Binding AppItemGroupSidePadDropCommand, Source={x:Static vm:MainWindowViewModel.Instance}}" PassEventArgsToCommand="True" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </Button>
                    <hui:DropShadowDecorator
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        CornerRadius="10"
                        DropShadowPlacement="BottomRight">
                        <GroupBox
                            hui:GroupBoxAttached.HeaderBackground="{DynamicResource SecondaryBackgroundBrush}"
                            hui:GroupBoxAttached.HeaderMinSize="64"
                            AllowDrop="True"
                            Background="{DynamicResource SecondaryBackgroundBrush}"
                            DataContext="{Binding CurrentAppItemGroup}">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="Drop">
                                    <b:InvokeCommandAction Command="{Binding AppItemGroupPadDropCommand, Source={x:Static vm:MainWindowViewModel.Instance}}" PassEventArgsToCommand="True" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                            <GroupBox.Header>
                                <hui:TextBoxEx
                                    Width="300"
                                    VerticalAlignment="Center"
                                    d:Text="Title"
                                    MaxLength="30"
                                    Text="{Binding GroupTitle, Mode=TwoWay}"
                                    TextAlignment="Center"
                                    TrayBorderEventVisibility="VisibleOnFocus" />
                            </GroupBox.Header>
                            <ItemsControl
                                Margin="20,5,20,10"
                                d:ItemsSource="{d:SampleData ItemCount=16}"
                                ItemsSource="{Binding AppItems}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel
                                            Width="{Binding GroupCol, Source={x:Static vm:Settings.Instance}, Converter={x:Static hui:NumMulParamToDoubleConverter.Instance}, ConverterParameter=95}"
                                            Height="{Binding GroupRow, Source={x:Static vm:Settings.Instance}, Converter={x:Static hui:NumMulParamToDoubleConverter.Instance}, ConverterParameter=95}"
                                            d:Height="380"
                                            d:Width="380"
                                            Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type vm:AppItem}">
                                        <hui:DraggableHaft
                                            Width="95"
                                            Height="95"
                                            Padding="0"
                                            HorizontalContentAlignment="Center"
                                            VerticalContentAlignment="Top"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Command="{Binding AppItemCompoundCommand, Source={x:Static vm:MainWindowViewModel.Instance}}"
                                            CornerRadius="0"
                                            DragData="{Binding}"
                                            PassEventArgsToCommand="True">
                                            <b:Interaction.Triggers>
                                                <b:EventTrigger EventName="MouseRightButtonUp">
                                                    <b:InvokeCommandAction Command="{Binding AppItemMouseRightUpCommand, Source={x:Static vm:MainWindowViewModel.Instance}}" CommandParameter="{Binding}" />
                                                </b:EventTrigger>
                                            </b:Interaction.Triggers>
                                            <StackPanel>
                                                <Grid
                                                    Width="32"
                                                    Height="32"
                                                    Margin="15,10,15,10">
                                                    <ContentControl Content="{Binding Icon}">
                                                        <d:ContentControl.Content>
                                                            <d:Path Data="{StaticResource FileBreakGeometry}" Style="{StaticResource PathIcon32Style}" />
                                                        </d:ContentControl.Content>
                                                    </ContentControl>
                                                </Grid>
                                                <TextBlock
                                                    Margin="4,0,4,0"
                                                    d:Text="ABC 12345 ZX666"
                                                    Text="{Binding Title}"
                                                    TextAlignment="Center"
                                                    TextWrapping="Wrap" />
                                            </StackPanel>
                                        </hui:DraggableHaft>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </GroupBox>
                    </hui:DropShadowDecorator>
                </Grid>
                <!--  文件右键菜单  -->
                <Grid d:Visibility="Collapsed" Visibility="{Binding CurrentAppItem, FallbackValue={x:Static Visibility.Visible}, TargetNullValue={x:Static Visibility.Collapsed}}">
                    <Button
                        Background="{DynamicResource SecondaryBackgroundBrush}"
                        Command="{Binding CloseItemMenuCommand}"
                        CommandParameter="Close"
                        Opacity="0.85"
                        Style="{DynamicResource ButtonBlankStyle}" />
                    <StackPanel Margin="35" VerticalAlignment="Center">
                        <Grid Height="45" Margin="10,0">
                            <Button
                                Padding="12,12"
                                HorizontalAlignment="Left"
                                hui:ButtonAttached.CornerRadius="5,5,0,0"
                                Background="{DynamicResource SecondaryBackgroundBrush}"
                                BorderThickness="1,1,1,0"
                                Command="{Binding MoveOutGroupCommand}"
                                Visibility="{Binding MoveOutGroupVisibility}">
                                <StackPanel Orientation="Horizontal">
                                    <Path Data="{StaticResource ForwardFillGeometry}" Style="{DynamicResource PathIcon16Style}" />
                                    <TextBlock Margin="10,0,0,0" Text="{Binding Main.MoveOutGroup, Source={x:Static vm:LanguagePackage.Instance}}" />
                                </StackPanel>
                            </Button>
                            <Button
                                Padding="12,12"
                                HorizontalAlignment="Right"
                                hui:ButtonAttached.CornerRadius="5,5,0,0"
                                Background="{DynamicResource SecondaryBackgroundBrush}"
                                BorderThickness="1,1,1,0"
                                Command="{Binding MoveToPreviousPageCommand}"
                                Visibility="{Binding MoveToPageVisibility}">
                                <StackPanel Orientation="Horizontal">
                                    <Path Data="{StaticResource ArrowUpBoldHexagonGeometry}" Style="{DynamicResource PathIcon16Style}" />
                                    <TextBlock Margin="10,0,0,0" Text="{Binding Main.MoveToPreviousPage, Source={x:Static vm:LanguagePackage.Instance}}" />
                                </StackPanel>
                            </Button>
                        </Grid>
                        <hui:DropShadowDecorator
                            MaxWidth="570"
                            CornerRadius="10"
                            DropShadowPlacement="BottomRight">
                            <GroupBox
                                hui:GroupBoxAttached.HeaderBackground="{DynamicResource SecondaryBackgroundBrush}"
                                hui:GroupBoxAttached.HeaderMinSize="64"
                                Background="{DynamicResource SecondaryBackgroundBrush}"
                                DataContext="{Binding CurrentAppItem}">
                                <GroupBox.Header>
                                    <DockPanel LastChildFill="True">
                                        <ContentControl
                                            Width="32"
                                            Height="32"
                                            Margin="20,0,0,0"
                                            Content="{Binding Icon}"
                                            DockPanel.Dock="Left">
                                            <d:ContentControl.Content>
                                                <d:Path Data="{StaticResource FileBreakGeometry}" Style="{StaticResource PathIcon32Style}" />
                                            </d:ContentControl.Content>
                                        </ContentControl>
                                        <hui:TextBoxEx
                                            Margin="20,0,20,0"
                                            VerticalAlignment="Center"
                                            d:Text="Title"
                                            MaxLength="30"
                                            Text="{Binding Title, Mode=TwoWay}"
                                            TrayBorderEventVisibility="VisibleOnFocus" />
                                    </DockPanel>
                                </GroupBox.Header>
                                <StackPanel>
                                    <Border
                                        Height="48"
                                        Margin="0,5,0,0"
                                        CornerRadius="{DynamicResource ContainerCornerRadius}"
                                        Visibility="{Binding Kind, Converter={x:Static local:AppItemKindToVisibilityVisibleConverter.Instance}}">
                                        <hui:TextBoxEx
                                            Margin="20,0,20,0"
                                            VerticalAlignment="Center"
                                            DockPanel.Dock="Left"
                                            TrayBorderEventVisibility="VisibleOnFocus">
                                            <hui:TextBoxEx.Header>
                                                <Label Content="{Binding AppItem.Arguments, Source={x:Static vm:LanguagePackage.Instance}, Mode=TwoWay}" Style="{StaticResource HeaderLabelStyle}" />
                                            </hui:TextBoxEx.Header>
                                        </hui:TextBoxEx>
                                    </Border>
                                    <Button
                                        Height="48"
                                        Margin="0,5,0,0"
                                        HorizontalContentAlignment="Left"
                                        Command="{Binding CloseItemMenuCommand, Source={x:Static vm:MainWindowViewModel.Instance}}"
                                        CommandParameter="Run"
                                        Style="{DynamicResource ButtonTransparentStyle}">
                                        <StackPanel Margin="20,0,0,0" Orientation="Horizontal">
                                            <Path Data="{StaticResource ApplicationGeometry}" Style="{StaticResource PathIcon16Style}" />
                                            <Grid>
                                                <TextBlock
                                                    Margin="20,0,0,0"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding AppItem.Run, Source={x:Static vm:LanguagePackage.Instance}}"
                                                    Visibility="{Binding Privilege, Converter={x:Static hui:BooleanToVisibilityCollapsedConverter.Instance}}" />
                                                <TextBlock
                                                    Margin="20,0,0,0"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding AppItem.RunAsAdministrator, Source={x:Static vm:LanguagePackage.Instance}}"
                                                    Visibility="{Binding Privilege, Converter={x:Static hui:BooleanToVisibilityVisibleConverter.Instance}}" />
                                            </Grid>
                                        </StackPanel>
                                    </Button>
                                    <Grid Margin="0,5,0,0" Visibility="{Binding Kind, Converter={x:Static local:AppItemKindToVisibilityVisibleConverter.Instance}}">
                                        <Button
                                            Height="48"
                                            HorizontalContentAlignment="Left"
                                            Command="{Binding CloseItemMenuCommand, Source={x:Static vm:MainWindowViewModel.Instance}}"
                                            CommandParameter="RunAsAdministrator"
                                            Style="{DynamicResource ButtonTransparentStyle}">
                                            <StackPanel Margin="20,0,0,0" Orientation="Horizontal">
                                                <Grid>
                                                    <Path Data="{StaticResource ApplicationGeometry}" Style="{StaticResource PathIcon16Style}" />
                                                    <Path Data="{StaticResource SecurityGeometry}" Style="{StaticResource PathIcon10Style}" />
                                                </Grid>
                                                <TextBlock
                                                    Margin="20,0,0,0"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding AppItem.RunAsAdministrator, Source={x:Static vm:LanguagePackage.Instance}}" />
                                            </StackPanel>
                                        </Button>
                                        <CheckBox
                                            Margin="0,0,20,0"
                                            HorizontalAlignment="Right"
                                            hui:CheckBoxAttached.IconPlacement="Right"
                                            Content="{Binding AppItem.DefaultRunAsAdministrator, Source={x:Static vm:LanguagePackage.Instance}}"
                                            IsChecked="{Binding Privilege, Mode=TwoWay}"
                                            Style="{DynamicResource CheckBoxSwitchStyle}" />
                                    </Grid>
                                    <Button
                                        Height="48"
                                        Margin="0,5,0,0"
                                        HorizontalContentAlignment="Left"
                                        Command="{Binding CloseItemMenuCommand, Source={x:Static vm:MainWindowViewModel.Instance}}"
                                        CommandParameter="OpenFileLocation"
                                        Style="{DynamicResource ButtonTransparentStyle}">
                                        <StackPanel Margin="20,0,0,0" Orientation="Horizontal">
                                            <Path Data="{StaticResource FolderOpenGeometry}" Style="{StaticResource PathIcon16Style}" />
                                            <TextBlock
                                                Margin="20,0,0,0"
                                                VerticalAlignment="Center"
                                                Text="{Binding AppItem.OpenFileLocation, Source={x:Static vm:LanguagePackage.Instance}}" />
                                        </StackPanel>
                                    </Button>
                                    <Grid Margin="0,5,0,0">
                                        <Button
                                            Height="48"
                                            HorizontalContentAlignment="Left"
                                            Command="{Binding CloseItemMenuCommand, Source={x:Static vm:MainWindowViewModel.Instance}}"
                                            CommandParameter="Remove"
                                            IsEnabled="{Binding AllowRemove, Source={x:Static vm:Settings.Instance}}"
                                            Style="{DynamicResource ButtonTransparentStyle}">
                                            <StackPanel Margin="20,0,0,0" Orientation="Horizontal">
                                                <Path
                                                    Data="{StaticResource DeleteGeometry}"
                                                    DockPanel.Dock="Left"
                                                    Style="{StaticResource PathIcon16Style}" />
                                                <TextBlock
                                                    Margin="20,0,0,0"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding AppItem.Remove, Source={x:Static vm:LanguagePackage.Instance}}" />
                                            </StackPanel>
                                        </Button>
                                        <CheckBox
                                            Margin="0,0,20,0"
                                            HorizontalAlignment="Right"
                                            Content="{Binding AppItem.AllowsRemove, Source={x:Static vm:LanguagePackage.Instance}}"
                                            IsChecked="{Binding AllowRemove, Mode=TwoWay, Source={x:Static vm:Settings.Instance}}"
                                            Style="{DynamicResource CheckBoxSwitchStyle}" />
                                    </Grid>
                                </StackPanel>
                            </GroupBox>
                        </hui:DropShadowDecorator>
                        <Grid Height="45" Margin="10,0">
                            <Button
                                Padding="12,12"
                                HorizontalAlignment="Right"
                                hui:ButtonAttached.CornerRadius="0,0,5,5"
                                Background="{DynamicResource SecondaryBackgroundBrush}"
                                BorderThickness="1,0,1,1"
                                Command="{Binding MoveToNextPageCommand}"
                                Visibility="{Binding MoveToPageVisibility}">
                                <StackPanel Orientation="Horizontal">
                                    <Path Data="{StaticResource ArrowDownBoldHexagonGeometry}" Style="{DynamicResource PathIcon16Style}" />
                                    <TextBlock Margin="10,0,0,0" Text="{Binding Main.MoveToNextPage, Source={x:Static vm:LanguagePackage.Instance}}" />
                                </StackPanel>
                            </Button>
                        </Grid>
                    </StackPanel>
                </Grid>
                <!--  设置页  -->
                <Grid d:Visibility="Collapsed" Visibility="{Binding SettingsMenuVisibility}">
                    <Button
                        Background="{DynamicResource SecondaryBackgroundBrush}"
                        Command="{Binding ToggleSettingsMenuCommand}"
                        Opacity="0.95"
                        Style="{DynamicResource ButtonBlankStyle}" />
                    <hui:DropShadowDecorator
                        MaxWidth="570"
                        Margin="35"
                        VerticalAlignment="Center"
                        CornerRadius="10"
                        DropShadowPlacement="BottomRight">
                        <GroupBox
                            hui:GroupBoxAttached.HeaderBackground="{DynamicResource SecondaryBackgroundBrush}"
                            hui:GroupBoxAttached.HeaderMinSize="64"
                            Background="{DynamicResource SecondaryBackgroundBrush}">
                            <GroupBox.Header>
                                <DockPanel>
                                    <Path
                                        Margin="20,0,0,0"
                                        Data="{StaticResource SettingGeometry}"
                                        DockPanel.Dock="Left"
                                        Style="{StaticResource PathIcon32Style}" />
                                    <TextBlock
                                        Margin="20,0,0,0"
                                        VerticalAlignment="Center"
                                        DockPanel.Dock="Left"
                                        Text="{Binding Settings.Settings, Source={x:Static vm:LanguagePackage.Instance}}" />
                                    <StackPanel
                                        Margin="0,0,20,0"
                                        VerticalAlignment="Center"
                                        DockPanel.Dock="Right">
                                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                            <Button
                                                hui:UriValueAttached.Item1="https://github.com/LokiHonoo/Wireshelves"
                                                Command="{Binding OpenUriCommand}"
                                                CommandParameter="{Binding Path=(hui:UriValueAttached.Item1), RelativeSource={RelativeSource Mode=Self}}"
                                                Cursor="Hand"
                                                Style="{DynamicResource ButtonTransparentStyle}">
                                                <Path
                                                    Data="{StaticResource GitHubGeometry}"
                                                    Fill="{DynamicResource ThirdlyForegroundBrush}"
                                                    Style="{StaticResource PathIcon20Style}" />
                                            </Button>
                                            <TextBlock
                                                Margin="10,0,0,0"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource ThirdlyForegroundBrush}"
                                                Text="{Binding Settings.VersionName, Source={x:Static vm:LanguagePackage.Instance}}" />
                                            <TextBlock
                                                Margin="4,0,0,0"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource ThirdlyForegroundBrush}"
                                                Text="{Binding Version, Source={x:Static vm:General.Instance}}" />
                                        </StackPanel>
                                        <TextBlock
                                            Margin="0,2"
                                            HorizontalAlignment="Right"
                                            FontSize="11"
                                            Foreground="{DynamicResource FifthlyForegroundBrush}">
                                            Copyright (C) Loki Honoo 2023. All rights reserved.
                                        </TextBlock>
                                    </StackPanel>
                                </DockPanel>
                            </GroupBox.Header>
                            <StackPanel>
                                <Border
                                    Height="48"
                                    Margin="0,5,0,0"
                                    CornerRadius="{DynamicResource ContainerCornerRadius}">
                                    <DockPanel LastChildFill="False">
                                        <Path
                                            Margin="20,0,0,0"
                                            Data="{StaticResource ThemeGeometry}"
                                            DockPanel.Dock="Left"
                                            Style="{StaticResource PathIcon16Style}" />
                                        <TextBlock
                                            Margin="20,0,0,0"
                                            VerticalAlignment="Center"
                                            DockPanel.Dock="Left"
                                            Text="{Binding Settings.ThemeStyle, Source={x:Static vm:LanguagePackage.Instance}}" />
                                        <ComboBox
                                            Margin="0,0,20,0"
                                            VerticalAlignment="Center"
                                            DockPanel.Dock="Right"
                                            ItemsSource="{Binding ThemeStyles, Source={x:Static vm:Settings.Instance}}"
                                            SelectedItem="{Binding ThemeStyle, Source={x:Static vm:Settings.Instance}, Mode=TwoWay}" />
                                    </DockPanel>
                                </Border>
                                <Border
                                    Height="48"
                                    Margin="0,5,0,0"
                                    CornerRadius="{DynamicResource ContainerCornerRadius}">
                                    <DockPanel LastChildFill="False">
                                        <Path
                                            Margin="20,0,0,0"
                                            Data="{StaticResource GridGapFillGeometry}"
                                            DockPanel.Dock="Left"
                                            Style="{StaticResource PathIcon16Style}" />
                                        <TextBlock
                                            Margin="20,0,0,0"
                                            VerticalAlignment="Center"
                                            DockPanel.Dock="Left"
                                            Text="{Binding Settings.ShelfSize, Source={x:Static vm:LanguagePackage.Instance}}" />
                                        <hui:ComboBoxEx
                                            Margin="0,0,20,0"
                                            VerticalAlignment="Center"
                                            DockPanel.Dock="Right"
                                            ItemsSource="{Binding ShelfRows, Source={x:Static vm:Settings.Instance}}"
                                            SelectedItem="{Binding ShelfRow, Source={x:Static vm:Settings.Instance}, Mode=TwoWay}">
                                            <hui:ComboBoxEx.Header>
                                                <Path
                                                    Margin="7,0"
                                                    Data="{StaticResource MoreVerticalGeometry}"
                                                    Fill="{DynamicResource PrimaryForegroundBrush}"
                                                    Style="{StaticResource PathIcon16Style}" />
                                            </hui:ComboBoxEx.Header>
                                        </hui:ComboBoxEx>
                                        <hui:ComboBoxEx
                                            Margin="0,0,20,0"
                                            VerticalAlignment="Center"
                                            DockPanel.Dock="Right"
                                            ItemsSource="{Binding ShelfCols, Source={x:Static vm:Settings.Instance}}"
                                            SelectedItem="{Binding ShelfCol, Source={x:Static vm:Settings.Instance}, Mode=TwoWay}">
                                            <hui:ComboBoxEx.Header>
                                                <Path
                                                    Margin="7,0"
                                                    Data="{StaticResource MoreHorizontalGeometry}"
                                                    Fill="{DynamicResource PrimaryForegroundBrush}"
                                                    Style="{StaticResource PathIcon16Style}" />
                                            </hui:ComboBoxEx.Header>
                                        </hui:ComboBoxEx>
                                    </DockPanel>
                                </Border>
                                <Border
                                    Height="48"
                                    Margin="0,5,0,0"
                                    CornerRadius="{DynamicResource ContainerCornerRadius}">
                                    <DockPanel LastChildFill="False">
                                        <Path
                                            Margin="20,0,0,0"
                                            Data="{StaticResource EarthGeometry}"
                                            DockPanel.Dock="Left"
                                            Style="{StaticResource PathIcon16Style}" />
                                        <TextBlock
                                            Margin="20,0,0,0"
                                            VerticalAlignment="Center"
                                            DockPanel.Dock="Left"
                                            Text="Language" />
                                        <ComboBox
                                            Margin="0,0,20,0"
                                            VerticalAlignment="Center"
                                            DisplayMemberPath="Key"
                                            DockPanel.Dock="Right"
                                            ItemsSource="{Binding Languages, Source={x:Static vm:Settings.Instance}}"
                                            SelectedItem="{Binding Language, Source={x:Static vm:Settings.Instance}, Mode=TwoWay}" />
                                        <hui:MenuButton
                                            Margin="0,0,20,0"
                                            VerticalAlignment="Center"
                                            DockPanel.Dock="Right"
                                            Header="Export">
                                            <MenuItem
                                                Command="{Binding ExportLanguageCommand}"
                                                CommandParameter="Currently"
                                                Header="Currently" />
                                            <MenuItem
                                                Command="{Binding ExportLanguageCommand}"
                                                CommandParameter="Default"
                                                Header="Default" />
                                        </hui:MenuButton>
                                    </DockPanel>
                                </Border>
                            </StackPanel>
                        </GroupBox>
                    </hui:DropShadowDecorator>
                </Grid>
            </Grid>
            <!--  底部  -->
            <Grid Grid.Row="2" Height="70">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <!--  展台  -->
                </Grid>
                <StackPanel
                    Grid.Column="1"
                    Margin="0,0,30,0"
                    Orientation="Horizontal">
                    <!--  主按钮  -->
                    <Button
                        Margin="2"
                        Padding="10"
                        VerticalAlignment="Center"
                        Command="{Binding SetLocationCommand}"
                        CommandParameter="{Binding ElementName=Window}"
                        Content="{StaticResource LocationOnGeometry}"
                        ContentTemplate="{StaticResource PathIcon16FillParentForegroundGeometryDataTemplate}"
                        Style="{DynamicResource ButtonTransparentStyle}"
                        ToolTip="{Binding Main.LocateButtonTip, Source={x:Static vm:LanguagePackage.Instance}}"
                        ToolTipService.Placement="Top" />
                    <Button
                        x:Name="SettingsToggleButton"
                        Margin="2"
                        Padding="10"
                        VerticalAlignment="Center"
                        Command="{Binding ToggleSettingsMenuCommand}"
                        Content="{StaticResource SettingGeometry}"
                        ContentTemplate="{StaticResource PathIcon16FillParentForegroundGeometryDataTemplate}"
                        Style="{DynamicResource ButtonTransparentStyle}"
                        ToolTip="{Binding Settings.Settings, Source={x:Static vm:LanguagePackage.Instance}}"
                        ToolTipService.Placement="Top" />
                    <Button
                        Margin="2"
                        Padding="10"
                        VerticalAlignment="Center"
                        Command="{Binding ExitCommand}"
                        Content="{StaticResource ExitGeometry}"
                        ContentTemplate="{StaticResource PathIcon16FillParentForegroundGeometryDataTemplate}"
                        Foreground="{DynamicResource PrimaryForegroundBrush}"
                        Style="{DynamicResource ButtonTransparentStyle}"
                        ToolTip="{Binding Main.ExitButtonTip, Source={x:Static vm:LanguagePackage.Instance}}"
                        ToolTipService.Placement="Top" />
                </StackPanel>
            </Grid>
        </Grid>
        <!--  DialogHost  -->
        <hui:DialogHost x:Name="MainDialogHost" Grid.ColumnSpan="2" />
        <!--  ToastHost  -->
        <hui:ToastHost
            x:Name="MainToastHost"
            Margin="20,40"
            VerticalAlignment="Top" />
    </Grid>
</hui:ChromeWindow>
